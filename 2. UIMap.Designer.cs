// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestGuzik3
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinButton uIZamknijButton = this.UIKreatoraktywacjiprodWindow.UIKreatoraktywacjiprodDialog.UIZamknijButton;
            WinTabPage uIWstawianieTabPage = this.UIDokument1MicrosoftWoWindow.UIItemWindow.UIRibbonClient.UIWstawianieTabPage;
            WinControl uITabelaDropDownGridButton = this.UIDokument1MicrosoftWoWindow.UIItemWindow.UITabeleToolBar.UITabelaDropDownGridButton;
            WinListItem uIItem3x1tabelaListItem = this.UIDokument1MicrosoftWoWindow.UIItemWindow.UIItem3x1tabelaGroup.UIItem3x1tabelaListItem;
            WinClient uIDokumentprogramuMicrClient = this.UIDokument1MicrosoftWoWindow.UIDokument1Client.UIDokumentprogramuMicrClient;
            WinTreeItem uIPulpitTreeItem = this.UIZapiszjakoWindow.UIWidokdrzewaWindow.UIPulpitTreeItem.UITenkomputerTreeItem.UIPulpitTreeItem;
            WinEdit uINazwaEdit = this.UIZapiszjakoWindow.UIItemWindow.UITestGuzikListItem.UINazwaEdit;
            WinEdit uINazwaEdit1 = this.UIZapiszjakoWindow.UIItemWindow1.UIWord3ListItem.UINazwaEdit;
            WinButton uIZapiszButton = this.UIZapiszjakoWindow.UIZapiszWindow.UIZapiszButton;
            WinButton uIZamknijButton1 = this.UIDokument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIZamknijButton;
            #endregion

            // Launch '%ProgramW6432%\Microsoft Office\Office14\WINWORD.EXE'
            ApplicationUnderTest wINWORDApplication = ApplicationUnderTest.Launch(this.RecordedMethod1Params.ExePath, this.RecordedMethod1Params.AlternateExePath);

            // Click 'Zamknij' button
            Mouse.Click(uIZamknijButton, new Point(27, 10));

            // Click 'Wstawianie' tab
            Mouse.Click(uIWstawianieTabPage, new Point(29, 7));

            // Click 'Tabela' DropDownGridButton
            Mouse.Click(uITabelaDropDownGridButton, new Point(19, 54));

            // Click '3x1 — tabela' list item
            Mouse.Click(uIItem3x1tabelaListItem, new Point(10, 5));

            // Click 'Dokument programu Microsoft Word' client
            Mouse.Click(uIDokumentprogramuMicrClient, new Point(513, 184));

            // Type 'Control + s' in 'Dokument programu Microsoft Word' client
            Keyboard.SendKeys(uIDokumentprogramuMicrClient, this.RecordedMethod1Params.UIDokumentprogramuMicrClientSendKeys, ModifierKeys.Control);

            // Click 'Pulpit' -> 'Ten komputer' -> 'Pulpit' tree item
            Mouse.Click(uIPulpitTreeItem, new Point(30, 15));

            // Double-Click 'Nazwa' text box
            Mouse.DoubleClick(uINazwaEdit, new Point(18, 14));

            // Double-Click 'Nazwa' text box
            Mouse.DoubleClick(uINazwaEdit1, new Point(28, 8));

            // Click '&Zapisz' button
            Mouse.Click(uIZapiszButton, new Point(45, 11));

            // Click 'Zamknij' button
            Mouse.Click(uIZamknijButton1, new Point(47, 0));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIKreatoraktywacjiprodWindow UIKreatoraktywacjiprodWindow
        {
            get
            {
                if ((this.mUIKreatoraktywacjiprodWindow == null))
                {
                    this.mUIKreatoraktywacjiprodWindow = new UIKreatoraktywacjiprodWindow();
                }
                return this.mUIKreatoraktywacjiprodWindow;
            }
        }
        
        public UIDokument1MicrosoftWoWindow UIDokument1MicrosoftWoWindow
        {
            get
            {
                if ((this.mUIDokument1MicrosoftWoWindow == null))
                {
                    this.mUIDokument1MicrosoftWoWindow = new UIDokument1MicrosoftWoWindow();
                }
                return this.mUIDokument1MicrosoftWoWindow;
            }
        }
        
        public UIZapiszjakoWindow UIZapiszjakoWindow
        {
            get
            {
                if ((this.mUIZapiszjakoWindow == null))
                {
                    this.mUIZapiszjakoWindow = new UIZapiszjakoWindow();
                }
                return this.mUIZapiszjakoWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIKreatoraktywacjiprodWindow mUIKreatoraktywacjiprodWindow;
        
        private UIDokument1MicrosoftWoWindow mUIDokument1MicrosoftWoWindow;
        
        private UIZapiszjakoWindow mUIZapiszjakoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramW6432%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string ExePath = "C:\\Program Files\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Launch '%ProgramW6432%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string AlternateExePath = "%ProgramW6432%\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Type 'Control + s' in 'Dokument programu Microsoft Word' client
        /// </summary>
        public string UIDokumentprogramuMicrClientSendKeys = "s";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKreatoraktywacjiprodWindow : WinWindow
    {
        
        public UIKreatoraktywacjiprodWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Kreator aktywacji produktu Microsoft Office";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NUIDialog";
            this.WindowTitles.Add("Kreator aktywacji produktu Microsoft Office");
            #endregion
        }
        
        #region Properties
        public UIKreatoraktywacjiprodDialog UIKreatoraktywacjiprodDialog
        {
            get
            {
                if ((this.mUIKreatoraktywacjiprodDialog == null))
                {
                    this.mUIKreatoraktywacjiprodDialog = new UIKreatoraktywacjiprodDialog(this);
                }
                return this.mUIKreatoraktywacjiprodDialog;
            }
        }
        #endregion
        
        #region Fields
        private UIKreatoraktywacjiprodDialog mUIKreatoraktywacjiprodDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKreatoraktywacjiprodDialog : WinControl
    {
        
        public UIKreatoraktywacjiprodDialog(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Kreator aktywacji produktu Microsoft Office";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
            this.WindowTitles.Add("Kreator aktywacji produktu Microsoft Office");
            #endregion
        }
        
        #region Properties
        public WinButton UIZamknijButton
        {
            get
            {
                if ((this.mUIZamknijButton == null))
                {
                    this.mUIZamknijButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIZamknijButton.SearchProperties[WinButton.PropertyNames.Name] = "Zamknij";
                    this.mUIZamknijButton.WindowTitles.Add("Kreator aktywacji produktu Microsoft Office");
                    #endregion
                }
                return this.mUIZamknijButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIZamknijButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDokument1MicrosoftWoWindow : WinWindow
    {
        
        public UIDokument1MicrosoftWoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "OpusApp";
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            this.WindowTitles.Add("Dok1.docx - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDokument1Client UIDokument1Client
        {
            get
            {
                if ((this.mUIDokument1Client == null))
                {
                    this.mUIDokument1Client = new UIDokument1Client(this);
                }
                return this.mUIDokument1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIDokument1Client mUIDokument1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            this.WindowTitles.Add("Dok1.docx - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public UIRibbonClient UIRibbonClient
        {
            get
            {
                if ((this.mUIRibbonClient == null))
                {
                    this.mUIRibbonClient = new UIRibbonClient(this);
                }
                return this.mUIRibbonClient;
            }
        }
        
        public UITabeleToolBar UITabeleToolBar
        {
            get
            {
                if ((this.mUITabeleToolBar == null))
                {
                    this.mUITabeleToolBar = new UITabeleToolBar(this);
                }
                return this.mUITabeleToolBar;
            }
        }
        
        public UIItem3x1tabelaGroup UIItem3x1tabelaGroup
        {
            get
            {
                if ((this.mUIItem3x1tabelaGroup == null))
                {
                    this.mUIItem3x1tabelaGroup = new UIItem3x1tabelaGroup(this);
                }
                return this.mUIItem3x1tabelaGroup;
            }
        }
        
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonClient mUIRibbonClient;
        
        private UITabeleToolBar mUITabeleToolBar;
        
        private UIItem3x1tabelaGroup mUIItem3x1tabelaGroup;
        
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonClient : WinClient
    {
        
        public UIRibbonClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIWstawianieTabPage
        {
            get
            {
                if ((this.mUIWstawianieTabPage == null))
                {
                    this.mUIWstawianieTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIWstawianieTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Wstawianie";
                    this.mUIWstawianieTabPage.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
                    #endregion
                }
                return this.mUIWstawianieTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIWstawianieTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabeleToolBar : WinToolBar
    {
        
        public UITabeleToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Tabele";
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public WinControl UITabelaDropDownGridButton
        {
            get
            {
                if ((this.mUITabelaDropDownGridButton == null))
                {
                    this.mUITabelaDropDownGridButton = new WinControl(this);
                    #region Search Criteria
                    this.mUITabelaDropDownGridButton.SearchProperties[UITestControl.PropertyNames.Name] = "Tabela";
                    this.mUITabelaDropDownGridButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDownGridButton";
                    this.mUITabelaDropDownGridButton.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
                    #endregion
                }
                return this.mUITabelaDropDownGridButton;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUITabelaDropDownGridButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem3x1tabelaGroup : WinGroup
    {
        
        public UIItem3x1tabelaGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "3x1 — tabela";
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem3x1tabelaListItem
        {
            get
            {
                if ((this.mUIItem3x1tabelaListItem == null))
                {
                    this.mUIItem3x1tabelaListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem3x1tabelaListItem.SearchProperties[WinListItem.PropertyNames.Name] = "3x1 — tabela";
                    #endregion
                }
                return this.mUIItem3x1tabelaListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem3x1tabelaListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Dok1.docx - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public WinButton UIZamknijButton
        {
            get
            {
                if ((this.mUIZamknijButton == null))
                {
                    this.mUIZamknijButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIZamknijButton.SearchProperties[WinButton.PropertyNames.Name] = "Zamknij";
                    this.mUIZamknijButton.WindowTitles.Add("Dok1.docx - Microsoft Word (Aktywacja produktu nie powiodła się)");
                    #endregion
                }
                return this.mUIZamknijButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIZamknijButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDokument1Client : WinClient
    {
        
        public UIDokument1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Dokument1";
            this.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokumentprogramuMicrClient
        {
            get
            {
                if ((this.mUIDokumentprogramuMicrClient == null))
                {
                    this.mUIDokumentprogramuMicrClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokumentprogramuMicrClient.SearchProperties[WinControl.PropertyNames.Name] = "Dokument programu Microsoft Word";
                    this.mUIDokumentprogramuMicrClient.WindowTitles.Add("Dokument1 - Microsoft Word (Aktywacja produktu nie powiodła się)");
                    #endregion
                }
                return this.mUIDokumentprogramuMicrClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokumentprogramuMicrClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIZapiszjakoWindow : WinWindow
    {
        
        public UIZapiszjakoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Zapisz jako";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public UIWidokdrzewaWindow UIWidokdrzewaWindow
        {
            get
            {
                if ((this.mUIWidokdrzewaWindow == null))
                {
                    this.mUIWidokdrzewaWindow = new UIWidokdrzewaWindow(this);
                }
                return this.mUIWidokdrzewaWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIZapiszWindow UIZapiszWindow
        {
            get
            {
                if ((this.mUIZapiszWindow == null))
                {
                    this.mUIZapiszWindow = new UIZapiszWindow(this);
                }
                return this.mUIZapiszWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIWidokdrzewaWindow mUIWidokdrzewaWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIZapiszWindow mUIZapiszWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWidokdrzewaWindow : WinWindow
    {
        
        public UIWidokdrzewaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public UIPulpitTreeItem UIPulpitTreeItem
        {
            get
            {
                if ((this.mUIPulpitTreeItem == null))
                {
                    this.mUIPulpitTreeItem = new UIPulpitTreeItem(this);
                }
                return this.mUIPulpitTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIPulpitTreeItem mUIPulpitTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPulpitTreeItem : WinTreeItem
    {
        
        public UIPulpitTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Pulpit";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public UITenkomputerTreeItem UITenkomputerTreeItem
        {
            get
            {
                if ((this.mUITenkomputerTreeItem == null))
                {
                    this.mUITenkomputerTreeItem = new UITenkomputerTreeItem(this);
                }
                return this.mUITenkomputerTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UITenkomputerTreeItem mUITenkomputerTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITenkomputerTreeItem : WinTreeItem
    {
        
        public UITenkomputerTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Ten komputer";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIPulpitTreeItem
        {
            get
            {
                if ((this.mUIPulpitTreeItem == null))
                {
                    this.mUIPulpitTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIPulpitTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Pulpit";
                    this.mUIPulpitTreeItem.SearchProperties["Value"] = "2";
                    this.mUIPulpitTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIPulpitTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIPulpitTreeItem.WindowTitles.Add("Zapisz jako");
                    #endregion
                }
                return this.mUIPulpitTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIPulpitTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Widok elementów";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public UITestGuzikListItem UITestGuzikListItem
        {
            get
            {
                if ((this.mUITestGuzikListItem == null))
                {
                    this.mUITestGuzikListItem = new UITestGuzikListItem(this);
                }
                return this.mUITestGuzikListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestGuzikListItem mUITestGuzikListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITestGuzikListItem : WinListItem
    {
        
        public UITestGuzikListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestGuzik";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public WinEdit UINazwaEdit
        {
            get
            {
                if ((this.mUINazwaEdit == null))
                {
                    this.mUINazwaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINazwaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nazwa";
                    this.mUINazwaEdit.WindowTitles.Add("Zapisz jako");
                    #endregion
                }
                return this.mUINazwaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINazwaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Widok elementów";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public UIWord3ListItem UIWord3ListItem
        {
            get
            {
                if ((this.mUIWord3ListItem == null))
                {
                    this.mUIWord3ListItem = new UIWord3ListItem(this);
                }
                return this.mUIWord3ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIWord3ListItem mUIWord3ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWord3ListItem : WinListItem
    {
        
        public UIWord3ListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Word3";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public WinEdit UINazwaEdit
        {
            get
            {
                if ((this.mUINazwaEdit == null))
                {
                    this.mUINazwaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINazwaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Nazwa";
                    this.mUINazwaEdit.WindowTitles.Add("Zapisz jako");
                    #endregion
                }
                return this.mUINazwaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINazwaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIZapiszWindow : WinWindow
    {
        
        public UIZapiszWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Zapisz jako");
            #endregion
        }
        
        #region Properties
        public WinButton UIZapiszButton
        {
            get
            {
                if ((this.mUIZapiszButton == null))
                {
                    this.mUIZapiszButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIZapiszButton.SearchProperties[WinButton.PropertyNames.Name] = "Zapisz";
                    this.mUIZapiszButton.WindowTitles.Add("Zapisz jako");
                    #endregion
                }
                return this.mUIZapiszButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIZapiszButton;
        #endregion
    }
}